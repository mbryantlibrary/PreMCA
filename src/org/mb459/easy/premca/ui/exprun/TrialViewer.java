/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.mb459.easy.premca.ui.exprun;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyChangeSupport;
import javax.swing.Timer;
import org.mb459.easy.premca.exp.ExpParam;
import org.mb459.easy.premca.genesis.AgentGenotype;

/**
 *
 * @author Miles
 */
public class TrialViewer extends javax.swing.JPanel implements ActionListener {

    private final Timer timer = new Timer(60,this);
    
    private int TimerLength = 60;

    public static final String PROP_TIMERLENGTH = "TimerLength";

    /**
     * Get the value of TimerLength
     *
     * @return the value of TimerLength
     */
    public int getTimerLength() {
        return TimerLength;
    }

    /**
     * Set the value of TimerLength
     *
     * @param TimerLength new value of TimerLength
     */
    public void setTimerLength(int TimerLength) {
        int oldTimerLength = this.TimerLength;
        this.TimerLength = TimerLength;
        this.timer.setDelay(this.TimerLength);
        propertyChangeSupport.firePropertyChange(PROP_TIMERLENGTH, oldTimerLength, TimerLength);
    }

    private transient final PropertyChangeSupport propertyChangeSupport = new PropertyChangeSupport(this);

   
    
    /**
     * Creates new form TrialViewer
     */
    public TrialViewer() {
        initComponents();
    }
    
    private AgentGenotype curGenotype;
    private ExpParam param;
    
    public void load(AgentGenotype g, ExpParam param) {
        curGenotype = g;
        this.param = param;
        worldPane1.load(curGenotype,param, 0, 0);
    }
    
    public void reload() {
        if(btnPlayPause.isSelected()) {
            load(curGenotype,param);
            btnPlayPause.doClick();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        worldPane1 = new org.mb459.easy.premca.ui.exprun.WorldPane();
        jPanel1 = new javax.swing.JPanel();
        btnPlayPause = new javax.swing.JToggleButton();
        btnReset = new javax.swing.JButton();
        jTimeSlide = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();

        worldPane1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        worldPane1.setForeground(new java.awt.Color(0, 0, 0));
        worldPane1.setToolTipText("");

        btnPlayPause.setText("Play");
        btnPlayPause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayPauseActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.setEnabled(false);
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        jTimeSlide.setMajorTickSpacing(50);
        jTimeSlide.setMaximum(250);
        jTimeSlide.setMinorTickSpacing(25);
        jTimeSlide.setPaintLabels(true);
        jTimeSlide.setPaintTicks(true);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${timerLength}"), jTimeSlide, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        jLabel1.setText("Speed (msec/frame)");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnPlayPause)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnReset)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTimeSlide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(322, 322, 322))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(btnPlayPause)
                        .addComponent(btnReset))
                    .addComponent(jTimeSlide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(worldPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 784, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(worldPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPlayPauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlayPauseActionPerformed
        if(btnPlayPause.isSelected()) {
            btnPlayPause.setText("Playing");
            btnReset.setEnabled(true);
            timer.start();
        } else {
            btnPlayPause.setText("Play");
            btnReset.setEnabled(false);
            if(timer != null)
                timer.stop();
        }
    }//GEN-LAST:event_btnPlayPauseActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        reload();
    }//GEN-LAST:event_btnResetActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnPlayPause;
    private javax.swing.JButton btnReset;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSlider jTimeSlide;
    private org.mb459.easy.premca.ui.exprun.WorldPane worldPane1;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        worldPane1.step();
        this.repaint();
    }

    /**
     * @return the curGenotype
     */
    public AgentGenotype getCurGenotype() {
        return curGenotype;
    }

    /**
     * @param curGenotype the curGenotype to set
     */
    public void setCurGenotype(AgentGenotype curGenotype) {
        this.curGenotype = curGenotype;
    }

    /**
     * @return the param
     */
    public ExpParam getParam() {
        return param;
    }

    /**
     * @param param the param to set
     */
    public void setParam(ExpParam param) {
        this.param = param;
    }
}
